# SOURCE IN RVM
if [[ -s "$HOME/.rvm/scripts/rvm" ]]; then
  export PATH="$HOME/.rvm/bin:$PATH"
  source "$HOME/.rvm/scripts/rvm"
fi

# VIRTUALENVWRAPPER
if [[ -f /usr/local/bin/virtualenvwrapper.sh ]]; then
  export WORKON_HOME="$HOME/VirtualEnvs"
  [[ -d ${WORKON_HOME} ]] || mkdir ${WORKON_HOME}
  source /usr/local/bin/virtualenvwrapper.sh
fi

# GOLANG
if which go &> /dev/null; then
  export GOPATH=${HOME}/go
  [[ -d ${GOPATH} ]] || mkdir ${GOPATH}
  export PATH="${GOPATH}/bin:${PATH}"
fi

# JAVA
if [[ -x /usr/libexec/java_home ]]; then
  export JAVA_HOME="$(/usr/libexec/java_home)"
  export PATH="${JAVA_HOME}/bin:${PATH}"
fi

# SSH
# Start an agent for real terms. Tmux sessions use the parent settings.
if [[ "${TERM}" =~ ^xterm ]]; then
  [[ -f ~/.ssh/id_rsa ]] && eval $(ssh-agent)
fi

# BASH COMPLETION
[[ -f /usr/local/etc/bash_completion ]] && . /usr/local/etc/bash_completion

# AWS COMPLETION
complete -C aws_completer aws

# TMUX
[[ "${TERM}" =~ ^screen ]] && tmux rename-window 'default'

# SSH CONFIG
[[ -f ~/.ssh/rea ]] && ssh-add ~/.ssh/rea &> /dev/null

# EC2
if [[ ${EC2_INSTANCE} ]]; then
  export EC2_INSTANCE_ID=$(ec2-metadata --instance-id | awk '{print $2}')
  export AWS_AZ=$(ec2-metadata --availability-zone | awk '{print $2}')
  export AWS_DEFAULT_REGION=$(echo ${AWS_AZ} | sed 's/[a-z]$//')

  if [[ -f /tmp/ec2-launch-time ]]; then
    export EC2_LAUNCH_TIME=$(cat /tmp/ec2-launch-time)
  else
    export EC2_LAUNCH_TIME=$(
      aws ec2 describe-instances --instance-ids ${EC2_INSTANCE_ID} |
        jshon -e Reservations -e 0 -e Instances -e 0 -e LaunchTime -u
    )
    echo ${EC2_LAUNCH_TIME} > /tmp/ec2-launch-time
  fi
fi

# ARDUINO
PATH+=":/Applications/Arduino.app/Contents/Java/hardware/tools/avr/bin"

# LESS SYNTAX HIGHLIGHTING
for cmd in /usr/bin/lesspipe /usr/local/bin/lesspipe.sh; do
  [[ -x ${cmd} ]] || continue
  eval "$(SHELL=/bin/sh ${cmd})"
done

# vim: ft=sh
