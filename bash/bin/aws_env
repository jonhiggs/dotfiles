#!/usr/bin/env bash
set -e
fetch_from_aws_config() {
  AWS_DEFAULT_PROFILE=${AWS_PROFILE}

  aws configure get aws_access_key_id &> /dev/null \
    || drop_cache && return 1

  AWS_DEFAULT_REGION=$(aws configure get region 2> /dev/null)
  AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key 2> /dev/null)
  AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id 2> /dev/null)
  unset AWS_SESSION_TOKEN
}

fetch_from_okta() {
  source <(yak ${AWS_PROFILE})
  unset AWS_DEFAULT_PROFILE
  export AWS_DEFAULT_REGION="us-east-1"
}

drop_cache() {
  unset ${AWS_VARIABLES[@]}
  ${REDIS_CMD} del ${AWS_VARIABLES[@]} &> /dev/null
}

get_cache() {
  local vars=(
    AWS_ACCESS_KEY_ID
    AWS_DEFAULT_REGION
    AWS_SECRET_ACCESS_KEY
    AWS_SESSION_TOKEN
  )
  for v in ${vars[@]}; do
    echo "${v}=$(${REDIS_CMD} mget ${v})"
  done
}

REDIS_CMD="redis-cli -s /tmp/redis.sock"
AWS_VARIABLES=(
  AWS_ACCESS_KEY_ID
  AWS_DEFAULT_REGION
  AWS_PROFILE
  AWS_SECRET_ACCESS_KEY
  AWS_SESSION_TOKEN
)

trap "drop_cache" SIGINT SIGTERM SIGQUIT

[[ $1 == "get" ]] && get_cache && exit 0

drop_cache
unset ${AWS_VARIABLES[@]}
CACHE_DURATION=$(( 60 * 60 )) # 1h
export AWS_PROFILE=${1:-non-prod}

case ${AWS_PROFILE} in
  personal) fetch_from_aws_config ;;
  drop)     drop_cache            ;;
  *)        fetch_from_okta       ;;
esac

for var in ${AWS_VARIABLES[@]}; do
  if [[ -v ${var} ]]; then
    ${REDIS_CMD} set ${var} "${!var}" &> /dev/null
    ${REDIS_CMD} expire ${var} ${CACHE_DURATION} &> /dev/null
  else
    unset ${var}
  fi
done
